diff --git a/CMakeLists.txt b/CMakeLists.txt
index 04f5caa..5277aff 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,7 +20,7 @@ else(APPLE)
 endif(APPLE)
 
 find_package(Iconv REQUIRED)
-find_package(OpenAL REQUIRED)
+#find_package(OpenAL)
 find_package(Threads REQUIRED)
 
 # If using GCC, configure it accordingly.
@@ -239,7 +239,7 @@ include_directories(${PROJECT_SOURCE_DIR})
 include_directories(${PROJECT_SOURCE_DIR}/arch/${CEN64_ARCH_DIR})
 include_directories(${PROJECT_SOURCE_DIR}/os/common)
 include_directories(${ICONV_INCLUDE_DIR})
-include_directories(${OPENAL_INCLUDE_DIR})
+#include_directories(${OPENAL_INCLUDE_DIR})
 include_directories(${OPENGL_INCLUDE_DIR})
 
 #
@@ -456,7 +456,7 @@ add_executable(cen64
 
 target_link_libraries(cen64
 	${EXTRA_OS_LIBS}
-  ${OPENAL_LIBRARY}
+# ${OPENAL_LIBRARY}
   ${OPENGL_gl_LIBRARY}
   ${ICONV_LIBRARIES}
   ${X11_X11_LIB}
diff --git a/ai/context.c b/ai/context.c
index 84a16af..1898341 100644
--- a/ai/context.c
+++ b/ai/context.c
@@ -17,7 +17,9 @@ int ai_context_create(struct cen64_ai_context *context) {
   unsigned i;
 
   context->cur_frequency = 31985;
+  memset(&(context->ctx), 0, sizeof(context->ctx));
 
+#ifdef OPENAL_SUPPORT
   if ((context->dev = alcOpenDevice(NULL)) == NULL) {
     printf("Failed to open the OpenAL device.\n");
     return 1;
@@ -25,6 +27,7 @@ int ai_context_create(struct cen64_ai_context *context) {
 
   if ((context->ctx = alcCreateContext(context->dev, NULL)) == NULL) {
     printf("Failed to create an OpenAL context.\n");
+
     alcCloseDevice(context->dev);
     return 1;
   }
@@ -34,7 +37,9 @@ int ai_context_create(struct cen64_ai_context *context) {
   // Context/device is setup, create some buffers and a source.
   alGenBuffers(sizeof(context->buffers) / sizeof(*context->buffers),
     context->buffers);
+#endif
 
+#ifdef OPENAL_SUPPORT
   if (alGetError() != AL_NO_ERROR) {
     alcMakeContextCurrent(NULL);
     alcDestroyContext(context->ctx);
@@ -66,12 +71,14 @@ int ai_context_create(struct cen64_ai_context *context) {
 
   context->unqueued_buffers = sizeof(context->buffers) /
     sizeof(*context->buffers);
+#endif
 
   return 0;
 }
 
 // Destroys audio contexts made with ai_context_create.
 void ai_context_destroy(struct cen64_ai_context *context) {
+#ifdef OPENAL
   alDeleteSources(1, &context->source);
   alDeleteBuffers(sizeof(context->buffers) / sizeof(*context->buffers),
     context->buffers);
@@ -79,10 +86,12 @@ void ai_context_destroy(struct cen64_ai_context *context) {
   alcMakeContextCurrent(NULL);
   alcDestroyContext(context->ctx);
   alcCloseDevice(context->dev);
+#endif
 }
 
 // Generate buffers for some given frequency.
 int ai_switch_frequency(struct cen64_ai_context *context, ALint frequency) {
+#ifdef OPENAL
   alDeleteSources(1, &context->source);
   alDeleteBuffers(sizeof(context->buffers) / sizeof(*context->buffers),
     context->buffers);
@@ -95,7 +104,8 @@ int ai_switch_frequency(struct cen64_ai_context *context, ALint frequency) {
 
   context->unqueued_buffers = sizeof(context->buffers) /
     sizeof(*context->buffers);
-
+#endif
   return 0;
+
 }
 
diff --git a/ai/controller.c b/ai/controller.c
index 24faf9e..b298c8f 100644
--- a/ai/controller.c
+++ b/ai/controller.c
@@ -69,10 +69,11 @@ void ai_dma(struct ai_controller *ai) {
 
     else {
       ALuint buffer;
-      ALint val;
+      ALint val = 0;
 
+#ifdef OPENAL
       alGetSourcei(ai->ctx.source, AL_BUFFERS_PROCESSED, &val);
-
+#endif
       // XXX: Most games pick one frequency and stick with it.
       // Instead of paying garbage, try to dynamically switch
       // the frequency of the buffers that OpenAL is using.
@@ -89,9 +90,10 @@ void ai_dma(struct ai_controller *ai) {
 
       // Grab any buffers that have been processed (for reuse).
       if (val) {
+#ifdef OPENAL
         alSourceUnqueueBuffers(ai->ctx.source, val,
             ai->ctx.buffers + ai->ctx.unqueued_buffers);
-
+#endif
         ai->ctx.unqueued_buffers += val;
       }
 
@@ -132,15 +134,18 @@ void ai_dma(struct ai_controller *ai) {
 
         ai->ctx.unqueued_buffers--;
         buffer = ai->ctx.buffers[ai->ctx.unqueued_buffers];
-
+#ifdef OPENAL
         alBufferData(buffer, AL_FORMAT_STEREO16, buf_ptr, length, freq);
         alSourceQueueBuffers(ai->ctx.source, 1, &buffer);
+#endif
       }
-
+#ifdef OPENAL
       alGetSourcei(ai->ctx.source, AL_SOURCE_STATE, &val);
-
+#endif
+#ifdef OPENAL
       if (val != AL_PLAYING)
         alSourcePlay(ai->ctx.source);
+#endif
     }
   }
 
@@ -167,7 +172,9 @@ int ai_init(struct ai_controller *ai,
   ai->no_output = no_interface;
 
   if (!no_interface) {
+#ifdef OPENAL
     alGetError();
+#endif
 
     if (ai_context_create(&ai->ctx)) {
       ai->no_output = 1;
diff --git a/arch/x86_64/rsp/rsp.c b/arch/x86_64/rsp/rsp.c
index 559431a..f2c4e36 100644
--- a/arch/x86_64/rsp/rsp.c
+++ b/arch/x86_64/rsp/rsp.c
@@ -240,7 +240,7 @@ int arch_rsp_init(struct rsp *rsp) { return 0; }
 #ifndef __SSSE3__
 __m128i rsp_vect_load_and_shuffle_operand(
   const uint16_t *src, unsigned element) {
-  __m128i v;
+  static __m128i v;
 
   switch(element) {
     case 0:
@@ -267,7 +267,7 @@ __m128i rsp_vect_load_and_shuffle_operand(
     case 5:
     case 6:
     case 7:
-      __asm__("" : "=x"(v)); /* Do not remove. */
+      //__asm__("" : "=x"(v)); /* Do not remove. */
       v = _mm_insert_epi16(v, src[element - 4], 0);
       v = _mm_insert_epi16(v, src[element - 0], 1);
       v = _mm_shufflelo_epi16(v, _MM_SHUFFLE(1,1,0,0));
@@ -283,7 +283,7 @@ __m128i rsp_vect_load_and_shuffle_operand(
     case 13:
     case 14:
     case 15:
-      __asm__("" : "=x"(v)); /* Do not remove. */
+      //__asm__("" : "=x"(v)); /* Do not remove. */
       v = _mm_insert_epi16(v, src[element - 8], 0);
       v = _mm_unpacklo_epi16(v, v);
       v = _mm_shuffle_epi32(v, _MM_SHUFFLE(0,0,0,0));
@@ -293,7 +293,8 @@ __m128i rsp_vect_load_and_shuffle_operand(
   #ifdef NDEBUG
   __builtin_unreachable();
   #else
-  __builtin_trap();
+  //__builtin_trap();
+ __debugbreak();
   #endif
 }
 #endif
@@ -380,12 +381,12 @@ void rsp_vload_group2(struct rsp *rsp, uint32_t addr, unsigned element,
     memcpy(&datahigh, rsp->mem + aligned_addr_hi, sizeof(datahigh));
 
     // TODO: Get rid of GNU extensions.
-    datalow = __builtin_bswap64(datalow);
-    datahigh = __builtin_bswap64(datahigh);
+    datalow = _byteswap_uint64(datalow);
+    datahigh = _byteswap_uint64(datahigh);
     datahigh >>= ((8 - offset) << 3);
     datalow <<= (offset << 3);
     datalow = datahigh | datalow;
-    datalow = __builtin_bswap64(datalow);
+    datalow = _byteswap_uint64(datalow);
 
     data = _mm_loadl_epi64((__m128i *) &datalow);
   }
diff --git a/cen64.c b/cen64.c
index 95b3816..e20a01f 100644
--- a/cen64.c
+++ b/cen64.c
@@ -331,6 +331,7 @@ int check_extensions(void) {
     return 0;
 }
 
+FILE* AddressLogger = NULL;
 // Load any ROM images required for simulation.
 int load_roms(const char *ddipl_path, const char *ddrom_path,
   const char *pifrom_path, const char *cart_path, struct rom_file *ddipl,
@@ -338,6 +339,7 @@ int load_roms(const char *ddipl_path, const char *ddrom_path,
   struct rom_file *ddrom, struct rom_file *pifrom, struct rom_file *cart) {
   memset(ddipl, 0, sizeof(*ddipl));
 
+  AddressLogger = fopen("c:\\hw\\Cen64AddrLog.bin","wb");
   if (ddipl_path && open_rom_file(ddipl_path, ddipl)) {
     printf("Failed to load DD IPL ROM: %s.\n", ddipl_path);
 
diff --git a/device/device.c b/device/device.c
index cd5a046..7dc3ec4 100644
--- a/device/device.c
+++ b/device/device.c
@@ -139,9 +139,9 @@ void device_destroy(struct cen64_device *device, const char *cart_path) {
 
   // Save profiling data, if any
   if (cart_path && has_profile_samples(device->vr4300)) {
-    char path[PATH_MAX];
-    snprintf(path, PATH_MAX, "%s.profile", cart_path);
-    path[PATH_MAX - 1] = '\0';
+    char path[MAX_PATH];
+    snprintf(path, sizeof(path), "%s.profile", cart_path);
+    path[sizeof(path) - 1] = '\0';
 
     FILE *f = fopen(path, "w");
     if (!f) {
diff --git a/gdb/gdb.c b/gdb/gdb.c
index 021784d..a58181a 100644
--- a/gdb/gdb.c
+++ b/gdb/gdb.c
@@ -12,9 +12,9 @@
 #include "gdb/protocol.h"
 
 #ifdef _WIN32
-#include <winsock2.h>
+//#include <winsock2.h>
 #include <windows.h>
-#include <ws2tcpip.h>
+//#include <ws2tcpip.h>
 #else
 #include <netdb.h>
 #include <sys/socket.h>
diff --git a/gdb/protocol.c b/gdb/protocol.c
index 18a7786..89327df 100644
--- a/gdb/protocol.c
+++ b/gdb/protocol.c
@@ -15,9 +15,9 @@
 #include <inttypes.h>
 
 #ifdef _WIN32
-#include <winsock2.h>
+//#include <winsock2.h>
 #include <windows.h>
-#include <ws2tcpip.h>
+//#include <ws2tcpip.h>
 #else
 #include <netdb.h>
 #include <sys/socket.h>
diff --git a/os/common/local_time.c b/os/common/local_time.c
index 05cba47..0b7446e 100644
--- a/os/common/local_time.c
+++ b/os/common/local_time.c
@@ -16,7 +16,7 @@ void get_local_time(struct time_stamp *ts, int32_t offset_seconds) {
 
   struct tm tm = { 0, };
 #ifdef _WIN32
-  localtime_s(&now, &tm);
+  localtime_s(&tm, &now);
 #else
   localtime_r(&now, &tm);
 #endif
diff --git a/os/winapi/main.c b/os/winapi/main.c
index 2d4e8d1..b385ce7 100644
--- a/os/winapi/main.c
+++ b/os/winapi/main.c
@@ -9,7 +9,7 @@
 //
 
 #include "cen64.h"
-#include <winsock2.h>
+//#include <winsock2.h>
 #include <windows.h>
 
 // Windows application entry point.
diff --git a/pi/controller.c b/pi/controller.c
index 1ce9662..4cb22fe 100644
--- a/pi/controller.c
+++ b/pi/controller.c
@@ -48,6 +48,7 @@ void pi_cycle_(struct pi_controller *pi) {
   }
 }
 
+extern FILE* AddressLogger;
 // Copies data from RDRAM to the PI
 static int pi_dma_read(struct pi_controller *pi) {
   uint32_t dest = pi->regs[PI_CART_ADDR_REG] & 0xFFFFFFE;
@@ -88,6 +89,7 @@ static int pi_dma_read(struct pi_controller *pi) {
   return 0;
 }
 
+uint32_t maxsource = 0;
 static void pi_rom_fetch(struct pi_controller *pi, uint32_t source, int32_t length, uint8_t *dest) {
   int l = length;
   if (source >= pi->rom_size)
@@ -169,6 +171,7 @@ static int pi_dma_write(struct pi_controller *pi) {
     uint8_t mem[128];
     bool first_block = true;
 
+    int32_t fullength = length;
     while (length > 0) {
       uint32_t dest = pi->regs[PI_DRAM_ADDR_REG] & 0x7FFFFE;
       int32_t misalign = dest & 0x7;
@@ -188,6 +191,18 @@ static int pi_dma_write(struct pi_controller *pi) {
       uint32_t source = pi->regs[PI_CART_ADDR_REG] & 0xFFFFFFE;
       int32_t rom_fetch_len = (cur_len + 1) & ~1;
       pi_rom_fetch(pi, source, rom_fetch_len, mem);
+      // 128byte
+      // 64 read reqs, 2byte each
+      for (uint32_t x = 0; x < rom_fetch_len; x+= 2) {
+        uint32_t addr = pi->regs[PI_CART_ADDR_REG] + x; 
+        if (x & 2) {
+            addr = *((uint32_t*)(mem + (x & ~3)));
+            addr = byteswap_32(addr);
+            addr = ((addr >> 16) | (addr << 16));
+        }
+        fwrite(&(addr), 4, 1, AddressLogger);
+      }
+      fflush(AddressLogger);
       pi->regs[PI_CART_ADDR_REG] += rom_fetch_len;
 
       // Writeback to RDRAM. Here come the lions.
@@ -243,6 +258,9 @@ int read_cart_rom(void *opaque, uint32_t address, uint32_t *word) {
   struct pi_controller *pi = (struct pi_controller *) opaque;
   unsigned offset = (address - ROM_CART_BASE_ADDRESS) & ~0x3;
 
+  fwrite(&address, 4, 1, AddressLogger);
+  fflush(AddressLogger);
+
   if (pi->is_viewer && is_viewer_map(pi->is_viewer, address))
     return read_is_viewer(pi->is_viewer, address, word);
 
@@ -255,6 +273,10 @@ int read_cart_rom(void *opaque, uint32_t address, uint32_t *word) {
 
   memcpy(word, pi->rom + offset, sizeof(*word));
   *word = byteswap_32(*word);
+  //fwrite(pi->rom + offset, 4, 1, AddressLogger);
+  uint32_t wordswap = (*word >> 16) | (*word << 16);
+  fwrite(&wordswap, 4, 1, AddressLogger);
+  fflush(AddressLogger);
   return 0;
 }
 
diff --git a/pi/is_viewer.c b/pi/is_viewer.c
index dbe6608..077df26 100644
--- a/pi/is_viewer.c
+++ b/pi/is_viewer.c
@@ -18,7 +18,7 @@ int is_viewer_init(struct is_viewer *is) {
   is->output_buffer = calloc(IS_BUFFER_SIZE, 1);
   is->output_buffer_conv = calloc(IS_BUFFER_SIZE * 3, 1);
 
-  is->cd = iconv_open("UTF-8", "EUC-JP");
+  //is->cd = iconv_open("UTF-8", "EUC-JP");
 
   if (is->buffer == NULL || is->output_buffer == NULL ||
       is->output_buffer_conv == NULL)
@@ -59,7 +59,7 @@ int write_is_viewer(struct is_viewer *is, uint32_t address, uint32_t word, uint3
         size_t outlen = 3 * len;
         char *outptr = (char *)is->output_buffer_conv;
         memset(is->output_buffer_conv, 0, IS_BUFFER_SIZE * 3);
-        iconv(is->cd, &inptr, &len, &outptr, &outlen);
+        //iconv(is->cd, &inptr, &len, &outptr, &outlen);
 
         printf("%s", is->output_buffer_conv);
 
diff --git a/si/cic.c b/si/cic.c
index e46bce6..845897e 100644
--- a/si/cic.c
+++ b/si/cic.c
@@ -77,7 +77,8 @@ int get_cic_seed(const uint8_t *rom_data, uint32_t *cic_seed) {
 
     default:
       *cic_seed = 0;
-      return 1;
+      *cic_seed = CIC_SEED_NUS_6102;
+      return 0;
   }
 
   return 0;
